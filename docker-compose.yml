version: '3.8'

volumes:
  acme-certs:
  
services:
  server:
    container_name: server
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: ./server
    privileged: true
    volumes:
      - /sys/devices/platform/soc/3f200000.gpio:/sys/devices/platform/soc/3f200000.gpio
      - /sys/class/gpio:/sys/class/gpio
      # https://stackoverflow.com/a/53626586
    environment:
      - DB_URL=value
      - JWT_SECRET=value
      - REFRESH_SECRET=value
  
  client:
    container_name: client
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: ./client
    ports:
      - 3000:80
    depends_on:
      - server
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.rule=(Host(`mydomain.com`) || Host(`www.mydomain.com`))' # insert domain
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.routers.client.tls.certresolver=letsencryptresolver'
      - 'traefik.http.routers.client.service=clientservice'
      - 'traefik.http.services.clientservice.loadbalancer.server.port=80'
    

  reverse-proxy:
    image: traefik:2.3
    command:
    - '--api=true'
    - '--api.dashboard=true'
    - '--providers.docker.endpoint=unix:///var/run/docker.sock'
    - '--providers.docker.exposedbydefault=false'
    - '--entrypoints.web.address=:80'
    - '--entrypoints.websecure.address=:443'
    - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true'
    - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web'
    - '--certificatesresolvers.letsencryptresolver.acme.email=email@example.com' # Put in your email (the email associated with your domain name)
    - '--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json'
    ports:
    - 80:80
    - 443:443
    volumes:
    - acme-certs:/letsencrypt
    - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
        - node.role == manager
      labels:
      - 'traefik.enable=true'
      # HTTP Catchall for redirecting HTTP -> HTTPS
      - 'traefik.http.routers.http-catchall.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      # Traefik dashboard
      - 'traefik.http.routers.traefik.rule=(Host(`mydomain.com`) || Host(`www.mydomain.com`)) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))' # Put in your domain
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.tls.certresolver=letsencryptresolver'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.services.api@internal.loadbalancer.server.port=8080' # Required in swarms, https://doc.traefik.io/traefik/v2.0/routing/providers/docker/#services
      # - 'traefik.http.routers.traefik.middlewares=traefik-auth'
      # - 'traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$8EVjn/nj$$GiLUZqcbueTFeD23SuB6x0' # username: admin, password: admin
      - 'traefik.http.routers.traefik.middlewares=strip'
      - 'traefik.http.middlewares.strip.stripprefix.prefixes=/traefik'